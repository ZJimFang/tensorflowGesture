{"version":3,"sources":["config/firebaseConfiguarion.js","utilities.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","database","labelMap","storage","1","name","color","2","3","4","5","drawRect","boxes","classes","scores","threshold","imgWidth","imgHeight","ctx","setControllerMouseX","setControllerMouseY","i","length","y","x","height","width","text","console","log","ref","set","MouseX","parseInt","MouseY","strokeStyle","lineWidth","fillStyle","font","beginPath","rect","stroke","one","controllerMouseX","controllerMouseY","App","webcamRef","useRef","canvasRef","runCoco","a","tf","net","setInterval","detect","current","video","readyState","videoWidth","videoHeight","img","fromPixels","resized","resizeBilinear","casted","cast","expanded","expandDims","executeAsync","obj","array","getContext","requestAnimationFrame","useEffect","className","muted","style","position","marginLeft","marginRight","left","right","textAlign","zindex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ybAwBAA,IAASC,cAbc,CACrBC,OAAQ,0CACRC,WAAY,6BACZC,YACE,uEACFC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAMJT,IAASU,OAAtB,IACMC,EAAKX,IAASY,WCxBdC,GDyBUb,IAASc,UCzBR,CACfC,EAAG,CAAEC,KAAM,QAASC,MAAO,OAC3BC,EAAG,CAAEF,KAAM,YAAaC,MAAO,UAC/BE,EAAG,CAAEH,KAAM,aAAcC,MAAO,QAChCG,EAAG,CAAEJ,KAAM,MAAOC,MAAO,QACzBI,EAAG,CAAEL,KAAM,KAAMC,MAAO,YAIbK,EAAW,SACtBC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAK,IAAIC,EAAI,EAAGA,GAAKT,EAAMU,OAAQD,IACjC,GAAIT,EAAMS,IAAMR,EAAQQ,IAAMP,EAAOO,GAAKN,EAAW,CAAC,IAAD,cACrBH,EAAMS,GADe,GAC5CE,EAD4C,KACzCC,EADyC,KACtCC,EADsC,KAC9BC,EAD8B,KAE7CC,EAAOd,EAAQQ,GAIF,IAAfR,EAAQQ,KACVO,QAAQC,IAAIL,EAAIR,EAAUO,EAAIN,EAJnB,IAIqCU,GAChD3B,EAAG8B,IAAI,oBAAoBC,IAAI,CAC7BC,OAAQC,SAAST,EAAIR,GACrBkB,OAAQD,SAASV,EAAIN,EAPZ,OAUXC,EAAIiB,YAAcjC,EAASyB,GAAT,MAClBT,EAAIkB,UAAY,GAChBlB,EAAImB,UAAY,QAChBnB,EAAIoB,KAAO,aACXpB,EAAIqB,YAEJrB,EAAIsB,KACFhB,EAAIR,EACJO,EAAIN,EACHS,EAAQV,EAAY,EACpBS,EAASR,EAAa,KAEzBC,EAAIuB,UAIa,IAAf5B,EAAQQ,KACVrB,EAAG8B,IAAI,gBAAgBC,IAAI,CACzBW,KAAK,IAGPxB,EAAIiB,YAAcjC,EAASyB,GAAT,MAClBT,EAAIkB,UAAY,GAChBlB,EAAImB,UAAY,QAChBnB,EAAIoB,KAAO,aACXpB,EAAIqB,YAEJrB,EAAIsB,KACFhB,EAAIR,EACJO,EAAIN,EACHS,EAAQV,EAAY,EACpBS,EAASR,EAAa,KAEzBC,EAAIuB,UAIa,IAAf5B,EAAQQ,KAEVrB,EAAG8B,IAAI,gBAAgBC,IAAI,CACzBW,IAAK,CAAEC,iBAAkB,EAAGC,iBAAkB,KAEhD5C,EAAG8B,IAAI,gBAAgBC,IAAI,CACzBW,IAAK,CACHC,iBAAkBV,SAAST,EAAIR,GAC/B4B,iBAAkBX,SAASV,EAAIN,EAvDxB,QA2DXjB,EAAG8B,IAAI,gBAAgBC,IAAI,CACzBW,KAAK,IAGPxB,EAAIiB,YAAcjC,EAASyB,GAAT,MAClBT,EAAIkB,UAAY,GAChBlB,EAAImB,UAAY,QAChBnB,EAAIoB,KAAO,aACXpB,EAAIqB,YAEJrB,EAAIsB,KACFhB,EAAIR,EACJO,EAAIN,EACHS,EAAQV,EAAY,EACpBS,EAASR,EAAa,KAEzBC,EAAIuB,YCwBGI,MArHf,WACE,IAAMC,EAAYC,iBAAO,MACnBC,EAAYD,iBAAO,MAGnBE,EAAO,uCAAG,4BAAAC,EAAA,sEAIIC,IAChB,+FALY,OAIRC,EAJQ,OASdC,aAAY,WACVC,EAAOF,KACN,IAXW,2CAAH,qDAcPE,EAAM,uCAAG,WAAOF,GAAP,qCAAAF,EAAA,yDAGkB,qBAAtBJ,EAAUS,SACK,OAAtBT,EAAUS,SAC6B,IAAvCT,EAAUS,QAAQC,MAAMC,WALb,wBAQLD,EAAQV,EAAUS,QAAQC,MAC1BE,EAAaZ,EAAUS,QAAQC,MAAME,WACrCC,EAAcb,EAAUS,QAAQC,MAAMG,YAG5Cb,EAAUS,QAAQC,MAAM9B,MAAQgC,EAChCZ,EAAUS,QAAQC,MAAM/B,OAASkC,EAGjCX,EAAUO,QAAQ7B,MAAQgC,EAC1BV,EAAUO,QAAQ9B,OAASkC,EAGrBC,EAAMT,IAAWU,WAAWL,GAC5BM,EAAUX,IAASY,eAAeH,EAAK,CAAC,IAAK,MAC7CI,EAASF,EAAQG,KAAK,SACtBC,EAAWF,EAAOG,WAAW,GAxBxB,UAyBOf,EAAIgB,aAAaF,GAzBxB,eAyBLG,EAzBK,iBA2BSA,EAAI,GAAGC,QA3BhB,eA2BL1D,EA3BK,iBA4BWyD,EAAI,GAAGC,QA5BlB,eA4BLzD,EA5BK,iBA6BUwD,EAAI,GAAGC,QA7BjB,QA6BLxD,EA7BK,OAgCLI,EAAM8B,EAAUO,QAAQgB,WAAW,MAIzCC,uBAAsB,WACpB7D,EACEC,EAAM,GACNC,EAAQ,GACRC,EAAO,GACP,GACA4C,EACAC,EACAzC,MAIJiC,IAAWS,GACXT,IAAWW,GACXX,IAAWa,GACXb,IAAWe,GACXf,IAAWkB,GApDA,4CAAH,sDA4DZ,OAJAI,qBAAU,WACRxB,MACC,IAGD,yBAAKyB,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,IAAD,CACE5C,IAAKgB,EACL6B,OAAO,EACPC,MAAO,CACLC,SAAU,WACVC,WAAY,OACZC,YAAa,OACbC,KAAM,EACNC,MAAO,EACPC,UAAW,SACXC,OAAQ,EACRzD,MAAO,IACPD,OAAQ,OAIZ,4BACEK,IAAKkB,EACL4B,MAAO,CACLC,SAAU,WACVC,WAAY,OACZC,YAAa,OACbC,KAAM,EACNC,MAAO,EACPC,UAAW,SACXC,OAAQ,EACRzD,MAAO,IACPD,OAAQ,UCjHpB2D,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.559c73bc.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/database\";\nimport \"firebase/compat/storage\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAZa8FuV77FAGkMbzWC4jgzDFJYYE0L8aY\",\n  authDomain: \"dot4eplus7.firebaseapp.com\",\n  databaseURL:\n    \"https://dot4eplus7-default-rtdb.asia-southeast1.firebasedatabase.app\",\n  projectId: \"dot4eplus7\",\n  storageBucket: \"dot4eplus7.appspot.com\",\n  messagingSenderId: \"226417690077\",\n  appId: \"1:226417690077:web:1d743fc6630b2f4f606234\",\n  measurementId: \"G-7DQXJP4LZT\",\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst auth = firebase.auth();\nconst db = firebase.database();\nconst storage = firebase.storage();\n\nexport { firebase, auth, db, storage };\n","import { db } from \"./config/firebaseConfiguarion\";\n\n// Define our labelmap\nconst labelMap = {\n  1: { name: \"Hello\", color: \"red\" },\n  2: { name: \"Thank You\", color: \"yellow\" },\n  3: { name: \"I Love You\", color: \"lime\" },\n  4: { name: \"Yes\", color: \"blue\" },\n  5: { name: \"No\", color: \"purple\" },\n};\n\n// Define a drawing function\nexport const drawRect = (\n  boxes,\n  classes,\n  scores,\n  threshold,\n  imgWidth,\n  imgHeight,\n  ctx,\n  setControllerMouseX,\n  setControllerMouseY\n) => {\n  for (let i = 0; i <= boxes.length; i++) {\n    if (boxes[i] && classes[i] && scores[i] > threshold) {\n      const [y, x, height, width] = boxes[i];\n      const text = classes[i];\n      const bios = 200;\n\n      //move\n      if (classes[i] === 1) {\n        console.log(x * imgWidth, y * imgHeight + bios, text);\n        db.ref(\"playerMouse3/one\").set({\n          MouseX: parseInt(x * imgWidth),\n          MouseY: parseInt(y * imgHeight + bios),\n        });\n\n        ctx.strokeStyle = labelMap[text][\"color\"];\n        ctx.lineWidth = 10;\n        ctx.fillStyle = \"white\";\n        ctx.font = \"30px Arial\";\n        ctx.beginPath();\n\n        ctx.rect(\n          x * imgWidth,\n          y * imgHeight,\n          (width * imgWidth) / 2,\n          (height * imgHeight) / 1.5\n        );\n        ctx.stroke();\n      }\n\n      //release\n      if (classes[i] === 3) {\n        db.ref(\"food/isClick\").set({\n          one: false,\n        });\n\n        ctx.strokeStyle = labelMap[text][\"color\"];\n        ctx.lineWidth = 10;\n        ctx.fillStyle = \"white\";\n        ctx.font = \"30px Arial\";\n        ctx.beginPath();\n\n        ctx.rect(\n          x * imgWidth,\n          y * imgHeight,\n          (width * imgWidth) / 2,\n          (height * imgHeight) / 1.5\n        );\n        ctx.stroke();\n      }\n\n      //hold\n      if (classes[i] === 4) {\n        //for click same place\n        db.ref(\"food/ClickIn\").set({\n          one: { controllerMouseX: 0, controllerMouseY: 0 },\n        });\n        db.ref(\"food/ClickIn\").set({\n          one: {\n            controllerMouseX: parseInt(x * imgWidth),\n            controllerMouseY: parseInt(y * imgHeight + bios),\n          },\n        });\n\n        db.ref(\"food/isClick\").set({\n          one: true,\n        });\n\n        ctx.strokeStyle = labelMap[text][\"color\"];\n        ctx.lineWidth = 10;\n        ctx.fillStyle = \"white\";\n        ctx.font = \"30px Arial\";\n        ctx.beginPath();\n\n        ctx.rect(\n          x * imgWidth,\n          y * imgHeight,\n          (width * imgWidth) / 2,\n          (height * imgHeight) / 1.5\n        );\n        ctx.stroke();\n      }\n    }\n  }\n};\n","// Import dependencies\nimport React, { useRef, useState, useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport Webcam from \"react-webcam\";\nimport \"./App.css\";\nimport { nextFrame } from \"@tensorflow/tfjs\";\n// 2. TODO - Import drawing utility here\n// e.g. import { drawRect } from \"./utilities\";\nimport { drawRect } from \"./utilities\";\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Main function\n  const runCoco = async () => {\n    // 3. TODO - Load network\n    // e.g. const net = await cocossd.load();\n    // https://tensorflowjsrealtimemodel.s3.au-syd.cloud-object-storage.appdomain.cloud/model.json\n    const net = await tf.loadGraphModel(\n      \"https://tensorflowjsrealtimemodel.s3.au-syd.cloud-object-storage.appdomain.cloud/model.json\"\n    );\n\n    //  Loop and detect hands\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n\n  const detect = async (net) => {\n    // Check data is available\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas height and width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // 4. TODO - Make Detections\n      const img = tf.browser.fromPixels(video);\n      const resized = tf.image.resizeBilinear(img, [640, 480]);\n      const casted = resized.cast(\"int32\");\n      const expanded = casted.expandDims(0);\n      const obj = await net.executeAsync(expanded);\n\n      const boxes = await obj[1].array();\n      const classes = await obj[2].array();\n      const scores = await obj[4].array();\n\n      // Draw mesh\n      const ctx = canvasRef.current.getContext(\"2d\");\n\n      // 5. TODO - Update drawing utility\n      // drawSomething(obj, ctx)\n      requestAnimationFrame(() => {\n        drawRect(\n          boxes[0],\n          classes[0],\n          scores[0],\n          0.8,\n          videoWidth,\n          videoHeight,\n          ctx\n        );\n      });\n\n      tf.dispose(img);\n      tf.dispose(resized);\n      tf.dispose(casted);\n      tf.dispose(expanded);\n      tf.dispose(obj);\n    }\n  };\n\n  useEffect(() => {\n    runCoco();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Webcam\n          ref={webcamRef}\n          muted={true}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 8,\n            width: 640,\n            height: 480,\n          }}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}